function [Y,Xf,Af] = myNeuralNetworkFunction(X,~,~)
%MYNEURALNETWORKFUNCTION neural network simulation function.
%
% Generated by Neural Network Toolbox function genFunction, 13-Sep-2016 10:23:50.
%
% [Y] = myNeuralNetworkFunction(X,~,~) takes these arguments:
%
%   X = 1xTS cell, 1 inputs over TS timsteps
%   Each X{1,ts} = 12xQ matrix, input #1 at timestep ts.
%
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 2xQ matrix, output #1 at timestep ts.
%
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1_xoffset = [1.61979124040807;1.55095105336276;1.66500543890813;3.56593361078692;3.68276178867394;3.60147221533988;0.723617941859257;0.725898031813287;0.726295797281729;13.3568434105256;16.0341644910475;13.2878855205591];
x1_step1_gain = [2.21370092252636;1.97367098659041;2.38488402823432;0.71947883299075;0.732767300619898;0.618678865714721;6.05492556554721;6.39335879958422;4.40445406597915;0.106299430000598;0.112511961134971;0.101782487272155];
x1_step1_ymin = -1;

% Layer 1
b1 = [-1.8074915216636069;1.6513538976313977;-1.4704187924164362;1.2457358501451234;-0.92954738229609146;-1.3178642853712557;-0.52680900291555344;-0.036921183392024881;-0.93779557413099157;0.23616642506611796;0.13192422207067325;0.10380435407932144;0.33471668455294934;-0.49236708011101854;0.78969274497661468;1.0340688169796186;-1.2536511368324599;1.4087662867450721;1.6271219562529184;-1.776878840675636];
IW1_1 = [0.59149856612433549 0.42784564851236118 -0.73656013755303906 0.56764719920655105 0.87287788009827516 -0.48392201930369622 -0.068721049363711775 0.58228213079517421 -0.20948615373695018 -0.027202368243495922 -0.48913130282946826 -0.47098619775160006;-0.12509714307172853 -0.36752287597058364 0.1553961678256045 0.047658172482827638 -0.59680049244119016 1.5564672936874175 0.29686569446108396 0.012650739302531869 0.24845130432823395 -0.6072175552618797 0.36890228961492272 0.13579496450762882;0.6777321728484601 0.64612853291413008 -0.037883087283635188 0.32932200521321275 0.11557438184497465 -0.38153745757666846 -0.81179849878805888 0.34833072330859721 0.54803769172315198 0.64964667309218593 0.22995116185276207 0.89631872768726539;-0.51771154673548714 -0.43873173454307812 0.84069262499534225 -0.16105913829335924 -0.1577486209779379 -0.78840964752454501 0.83166367160485188 -0.28894662516645719 -0.13223193554242671 0.66833518312642348 0.36905215133889774 -0.6805510641676451;0.5436623053651729 0.94306758283081438 0.28987099283989376 -0.018526482944856267 -0.88819980036899426 -0.18786340801182908 -0.47331559143207586 0.39897633392219573 0.62087920561834586 0.30669199797394037 -0.62372610814120366 -0.26101436087951457;0.20057261931806808 -0.49002986200958204 0.69576870881962993 0.57822744395777603 -0.063882113471030177 0.81851516918334011 -0.50277385412598241 -0.081913658013806775 0.42826117926726315 -0.2471295455363928 0.21328526146317892 -0.98305077631520665;0.56077849710269678 -0.6671556322200296 -0.64186104850515047 0.66037576788263097 0.68280324546263826 0.47239687576118899 -0.0041570440662742972 -0.50137737461805543 -0.0039096390159448543 -0.05085316174742302 -0.57130047721842914 0.70891513926378369;0.83967249337993499 -0.58486349339184018 0.77280670641124238 -0.49280249855664982 0.052342012493196852 -0.0079689853937753956 -0.0015128293768899642 -0.46993420451353113 -0.48150414631306282 0.81986194799534939 0.77980591476540817 0.35137776157969058;0.4902944028724292 -0.46155859789691867 0.10844852238738149 0.610159607252165 -0.33648765128448216 0.61743087908454108 -0.45519081049050358 1.0623099228185326 0.36003892156926715 0.29035600763231983 0.097795222999387338 -0.12969431622279837;-0.32909682293430365 -0.68161445844374702 -0.13280270925821319 0.46404498232095193 0.48106373113343415 0.61258593907266057 0.77986381691634932 0.73334988090782083 0.091082002933848188 -0.094309010172769173 0.59237744479950083 -0.63923182546672075;0.36499648946279872 0.5759660286593673 -0.61897317724819623 0.023935628363800983 0.76564181969361478 0.2669433602993036 -0.026631274013592818 -0.68150237007679504 -0.58325048524001111 -0.53421681608386307 0.68005395412227754 -0.16857957942473306;0.75689131605274418 -0.82235322847769854 -0.39786731630611755 -0.071434871085548191 0.36254021827376209 0.24586599644767146 -0.7682012064114806 -0.47856444510437707 -0.11294000142660664 -0.037843708683421282 0.74764274252081553 -0.59980380072661921;0.37703353802776857 0.90739068874823436 -0.11770157236421404 -0.17390267520053496 -0.70913524473127454 -0.1674936990191094 0.070858405080380105 -0.64051980524099916 -0.20309856156719089 -0.48275120239378705 0.57627657173317726 0.74405128163543177;-0.3540570082085211 0.032459064753415333 -0.49464413039875627 0.92440407388217671 -0.32407593302828686 -0.52504884420430475 0.40988535680984578 -0.48206492117684469 -0.35102393190112702 0.81174349918662492 0.49776315282309702 0.27094197861980091;0.43394313999514333 0.51665636579363672 -0.056947407131138043 0.35466903263050664 -0.89633176772017986 -0.31275748117451596 0.28292001263358457 0.93170846870271506 0.42229403085672901 0.48414473625712168 -0.57167491002720205 0.41406431141107519;0.60135954409272585 -0.051841173260272988 -0.22144583800796172 -0.39034087863263267 -0.24689146155741784 -0.31804940004547472 -0.51510549784085768 -0.84627104586400004 -0.30299643164471907 -0.78200513581382058 0.86700758797405486 -0.15807914038321016;-0.19173944221765515 0.03495902195096607 -0.8054812981557099 0.23013711610366727 0.74800469423276461 -0.57480133018399537 -0.68756846072845357 0.64600537496885624 -0.25444038716627576 -0.52200137914448863 0.3402223839140216 -0.41808689269084315;0.34914788255112106 0.15355786326199475 0.77575839018176795 0.83333390690519871 0.62102722161982871 -0.59072209549376731 0.059567795931628219 -0.13630325918719202 -0.67612345064613244 -0.46257309287507808 0.2422070457689959 0.52855449689386624;0.19796445709871463 0.66175445549926482 -0.22327000443438064 -0.23817336106648826 -0.89339631316975399 -0.089645826841202522 -0.13706476983411753 0.65064396822048376 0.60968418712595895 0.06640515834924364 0.97232222375423905 0.84712002413080589;-0.039557128624420977 -0.03782982106650272 0.7084629767834697 0.52424029024529617 0.48504855322282336 0.6593210803717704 0.03428378295264102 -0.59136146865830952 -0.58071606893536754 -0.75099463098875874 -0.65038267374500258 0.4117296012141935];

% Layer 2
b2 = [-0.86536541603932304;-0.35670860060899406];
LW2_1 = [-0.87000612893203655 -0.6707340522453763 -0.80489519899268824 1.1449690889048969 0.20189876780803151 0.39092810146725587 -1.1077648975302001 -0.53523901050415346 0.54703580081569392 0.012463254350543723 0.0019528020181417902 -0.63225472373761071 0.7207216673132737 0.26359960405184113 0.41184240496048063 0.72506954381454669 0.50085028234038476 0.60502802059029759 0.53957498007542215 0.2977335200103593;-0.52968693500708341 0.6291578111893843 0.0078992065109619522 0.13952386523603358 0.6841909706491538 -0.91517546154316687 -0.30735069571827178 0.5728383781918579 0.0011612332201939926 0.6469899655780269 -0.89914740690787964 -0.24054286164290659 0.038976535566129594 0.32700128210642315 0.86683793894573546 0.62117538815448481 0.44426458901257321 0.95462207841924429 -0.32160254199313448 0.11384857553197671];

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX, X = {X}; end;

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
    Q = size(X{1},2); % samples/series
else
    Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS
    
    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1_gain,x1_step1_xoffset,x1_step1_ymin);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = softmax_apply(repmat(b2,1,Q) + LW2_1*a1);
    
    % Output 1
    Y{1,ts} = a2;
end

% Final Delay States
Xf = cell(1,0);
Af = cell(2,0);

% Format Output Arguments
if ~isCellX, Y = cell2mat(Y); end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings_gain,settings_xoffset,settings_ymin)
y = bsxfun(@minus,x,settings_xoffset);
y = bsxfun(@times,y,settings_gain);
y = bsxfun(@plus,y,settings_ymin);
end

% Competitive Soft Transfer Function
function a = softmax_apply(n)
nmax = max(n,[],1);
n = bsxfun(@minus,n,nmax);
numer = exp(n);
denom = sum(numer,1);
denom(denom == 0) = 1;
a = bsxfun(@rdivide,numer,denom);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n)
a = 2 ./ (1 + exp(-2*n)) - 1;
end
