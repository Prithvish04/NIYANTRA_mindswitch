function [Y,Xf,Af] = myNeuralNetworkFunction(X,~,~)
%MYNEURALNETWORKFUNCTION neural network simulation function.
%
% Generated by Neural Network Toolbox function genFunction, 13-Sep-2016 10:25:19.
%
% [Y] = myNeuralNetworkFunction(X,~,~) takes these arguments:
%
%   X = 1xTS cell, 1 inputs over TS timsteps
%   Each X{1,ts} = 12xQ matrix, input #1 at timestep ts.
%
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 2xQ matrix, output #1 at timestep ts.
%
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1_xoffset = [1.61979124040807;1.55095105336276;1.66500543890813;3.56593361078692;3.68276178867394;3.60147221533988;0.723617941859257;0.725898031813287;0.726295797281729;13.3568434105256;16.0341644910475;13.2878855205591];
x1_step1_gain = [2.21370092252636;1.97367098659041;2.38488402823432;0.71947883299075;0.732767300619898;0.618678865714721;6.05492556554721;6.39335879958422;4.40445406597915;0.106299430000598;0.112511961134971;0.101782487272155];
x1_step1_ymin = -1;

% Layer 1
b1 = [-1.830576482081018;1.5322193742457495;-1.4798352388877714;1.8853157544127332;-1.2737831583247459;-1.3629013630982287;-1.0193832791472173;0.65633775620079449;0.33079775589576016;0.16769475445499354;0.20283800154577281;-0.26614983535500081;0.41070453152201841;1.4095086412030353;-1.0941092120483675;-1.4721370170108556;1.1316632934429107;-1.2664318272684016;-2.1180268114193339;1.7641531492838334];
IW1_1 = [-0.16391368852035529 0.42626269281591617 -0.60366167075174226 -1.8764416944660098 0.52974327063622018 -1.5199914741905325 0.45699334372163897 -0.94274568837905814 -0.81811168573568471 0.19277817413921758 0.39516209206716968 -0.43885908704047782;-0.90787198290087745 0.30182239740720745 -0.34707053867059645 -0.46100599473105786 0.61416383618112458 -0.41754108754471791 0.27538505249136119 -0.77209669468771236 0.15695568748645511 0.30327947149117734 0.74284084767730874 0.64476096341647549;0.19319501706755549 0.18932299238686245 -0.10806508273857078 0.91037359065608003 -0.35903898906690657 -0.54106010670856419 -0.49037411164148126 -0.58956148408029541 0.62904384855690676 0.23608886787429537 -0.44689302191541502 -0.67302638723931207;-0.34608525058665157 -0.53034232433843576 1.1889038556906217 -0.59320772624538942 -0.022597644364775901 0.54939338119394432 1.0376582696526389 0.35417208838405256 0.3187428537241388 0.93203420141028726 0.58012111601099026 -0.34132158631541365;0.47215474753678 -0.068965118347252302 -0.27724209104378744 1.0000072411247964 0.29952226487729361 -0.79139682830352098 1.2180332239883056 0.15452067286284468 -0.40633959360945893 -0.19335563520210108 0.58024422126147912 -0.80065983993015222;-0.14590643324696259 -1.0268003718709644 0.72896859630595845 -1.2321362652307122 -1.15116426023949 -0.037181942222134237 -1.2887875545206793 0.06142806965844945 0.75580362507085197 0.82322893832969535 0.2125968438431487 0.063953069984730826;-0.0080813491805958072 0.12151832883009347 -0.79110292785612579 -0.49679219142418629 -0.80461501611513864 0.039146420559948727 0.88098812563938744 1.0711443370394185 0.11469757216183959 -0.012902737797286443 0.47593515526623531 -0.32348133444090832;-0.12379977504853792 -0.89122043605162848 0.11665462678865249 -0.37781579937687004 -0.41682475613620029 -0.51992674621996204 -0.93709705352018857 -0.3052080632316414 -0.6769230397851278 0.53757722574000877 -0.76526342562022898 -0.48114225501588231;-0.39142201885928207 -0.76443981797407479 0.49536359582916284 -0.25857185993393678 0.73770022793479195 -0.0092278878358774546 -0.4132467770574918 -0.46276638291111949 0.75329196545991173 -0.015127570272590853 -0.27448686218433499 0.093689268033074341;-0.97395971994489272 1.2372714042294655 -0.65013304861273413 -0.53598005917523328 0.07357088501533128 -1.0930343061505439 -0.08616033444734128 -0.53955188989939373 0.7987206421183054 0.88210752790852265 1.5696276171993566 0.29547639125408842;-0.33739595141207279 -0.39533915559441335 0.8513617496201682 0.65528921644247706 -0.37114355769750146 0.3628088380723678 0.25517741709643038 0.51564323751312768 -0.63157457349223911 -0.84358351104533957 0.10549480268094472 0.091945736258105079;-0.12964204028479129 0.12342503185928708 -0.23349146585091315 -0.76221244328923377 -0.23475926516846188 -0.32806453140309494 -0.90418935958588453 -0.75095362752757755 0.093610966085608371 -0.55799585306725985 0.43023235532505433 -0.63588702654386731;0.40910908801195034 0.39008583845730743 -0.059393555373753966 -0.00076186231423189255 -0.28173145102173996 -0.12258303288842132 -0.75434086216135032 0.79907691187718044 0.76271486307810621 0.36541360974564963 -0.71552150965269457 -0.52385606203382551;-1.1623521304746232 -0.99104644064118552 0.46975418329038565 0.69226225301709254 -0.1852058382382232 -1.0813648474598794 1.0207351555773276 -0.21137310279766813 -1.1006537943685522 0.023852955251282067 -0.75894474086691099 -0.88783894877009462;0.44292533295796199 0.1585859124431036 0.36106144511567484 -0.93891363995814792 0.75302604145418628 0.75132550673439058 -0.74310437802784746 0.60372987791659927 0.10933319508754581 0.30870159256281315 -0.048137757667053804 0.78448905663426516;-0.5497004374221327 0.79652014555078898 1.3114720034842209 -0.22750492863536112 0.92356911065171654 0.029740990707134173 0.57363408870175692 0.76036908223959698 -0.51592772054028124 0.33531239348541514 0.55593933281623042 -0.23331039429813305;0.92695699675935739 -0.019942932520635892 0.10295371869797422 0.60305770542607906 -0.3568380566127512 1.3962260008881002 0.18884153659737685 0.11594246804970237 0.21712930149033238 1.0213800445937753 -0.95370303552055946 -0.1999595408148831;-0.065558832506293602 -0.15207687459043068 0.90037689446907954 1.0630867798415977 -0.35733568679312505 1.146755587696525 -0.43695108497196911 0.2801040129233307 0.50927806474048909 -0.60038921932686728 -0.58447362151507731 0.6055734755888873;-0.97666686968209038 0.59914884430819559 0.0081921816252573526 -0.98709350772166116 0.31217677355904011 -0.7559869958590093 -0.1013417905170565 -0.48264097337382683 0.11390910407242219 -1.0108147654720729 -0.067910406925195468 -0.13179757469002648;0.56498971637688156 -0.81857844038757999 -0.73367985554007187 0.30964542192592415 0.34152373421800097 -0.16879527411164008 -0.56609231474870181 0.64889420541708998 0.6996515238022476 -0.57353998367827719 0.28520524313227891 -0.47210857625574071];

% Layer 2
b2 = [-0.75537715343429446;0.13381907554236833];
LW2_1 = [1.7091494227760518 -0.65594429125059839 -0.5440447282654487 0.80541870962148898 -1.0297292229804329 -2.0192457118340248 0.52094637009456912 0.72911661661756311 -0.07245772123767763 1.1653673139675442 0.70486376479590651 -0.40621054404085405 -0.9307864794625591 1.1749217425209599 -0.42171585581884741 -0.33143680000113307 -1.3100666973575186 0.81201853127846435 0.26078236315024789 -0.61522202853577046;-1.024664225789621 0.55869610035290518 -0.4894899065699162 -1.3941810734300732 0.28091583602842984 1.0543819861320678 -0.74870090488277519 -0.37461499819661537 -0.68692534068492794 -1.4851667038385468 0.85755837253645684 0.43122266586395319 -0.83639679446984327 -0.88018378432713107 0.33818444910382056 1.1784671586161508 0.15635642031196145 -0.65798469098558765 -0.77037275387829984 -0.99500382986954683];

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX, X = {X}; end;

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
    Q = size(X{1},2); % samples/series
else
    Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS
    
    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1_gain,x1_step1_xoffset,x1_step1_ymin);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = softmax_apply(repmat(b2,1,Q) + LW2_1*a1);
    
    % Output 1
    Y{1,ts} = a2;
end

% Final Delay States
Xf = cell(1,0);
Af = cell(2,0);

% Format Output Arguments
if ~isCellX, Y = cell2mat(Y); end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings_gain,settings_xoffset,settings_ymin)
y = bsxfun(@minus,x,settings_xoffset);
y = bsxfun(@times,y,settings_gain);
y = bsxfun(@plus,y,settings_ymin);
end

% Competitive Soft Transfer Function
function a = softmax_apply(n)
nmax = max(n,[],1);
n = bsxfun(@minus,n,nmax);
numer = exp(n);
denom = sum(numer,1);
denom(denom == 0) = 1;
a = bsxfun(@rdivide,numer,denom);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n)
a = 2 ./ (1 + exp(-2*n)) - 1;
end
