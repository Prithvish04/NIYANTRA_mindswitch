function [Y,Xf,Af] = myNeuralNetworkFunction(X,~,~)
%MYNEURALNETWORKFUNCTION neural network simulation function.
%
% Generated by Neural Network Toolbox function genFunction, 13-Sep-2016 10:27:02.
%
% [Y] = myNeuralNetworkFunction(X,~,~) takes these arguments:
%
%   X = 1xTS cell, 1 inputs over TS timsteps
%   Each X{1,ts} = 12xQ matrix, input #1 at timestep ts.
%
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 2xQ matrix, output #1 at timestep ts.
%
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1_xoffset = [1.61979124040807;1.55095105336276;1.66500543890813;3.56593361078692;3.68276178867394;3.60147221533988;0.723617941859257;0.725898031813287;0.726295797281729;13.3568434105256;16.0341644910475;13.2878855205591];
x1_step1_gain = [2.21370092252636;1.97367098659041;2.38488402823432;0.71947883299075;0.732767300619898;0.618678865714721;6.05492556554721;6.39335879958422;4.40445406597915;0.106299430000598;0.112511961134971;0.101782487272155];
x1_step1_ymin = -1;

% Layer 1
b1 = [-1.7980800686591887;1.5630462059341594;-1.9844051000230643;-0.94717165836223893;-0.97187152877506844;0.515272151894692;0.37441540448025362;-0.4637329691937323;0.021924590027957921;0.004177127809574032;-0.47434243154900574;-0.65685971444340341;0.48930067266569466;0.093156130257794872;-0.81813556588322844;-1.3214722420473073;1.5303185216459194;2.0289211868083021;-1.5870753033173732;1.8290914259283697];
IW1_1 = [0.42144344848360399 -0.78325533177512352 0.44075576838221181 -1.2004776928361085 -0.20724239442257503 0.28806908555783101 0.59631137975038184 -0.82559254224903911 -0.15057302616669463 0.74658109569970732 0.30994301233848998 0.34167787637621344;0.092623803706221836 -0.025144891560489633 -0.37820476251631441 -0.66110229579472179 0.85778890916788741 0.064564260874373794 -0.87368031593894124 0.562656816090225 -1.3077376093742132 0.43154984850966921 -0.72213497045674024 0.40619253223594809;0.60809111869849597 -0.41894958606839672 1.0595190795577534 -0.23237201490821724 -0.67598043091319815 -0.95991475831639372 0.58901230833493579 -0.31883506942326584 -0.76842176243009752 0.27491200479757433 1.2876411225376967 0.34370543480684007;0.46164556378248933 0.20048641772225817 0.091089990942002694 -0.32568427886008022 -0.87712543806115828 0.3573151195081225 -0.92663874436217997 0.07181946658681726 -0.49218347764074893 0.98877593971809929 1.0138869791943068 -0.011937055082382984;0.26542134497803438 -0.75991817791419591 0.82675672170855474 -0.59480172473426751 0.41294782286474463 0.68408738706482153 0.38769147545055976 -0.066014933676960916 0.41900769807733335 -0.17657593563608318 -0.53173286374788586 -0.59334924362247365;-0.18600329275559593 -0.52108123059602174 -0.16188082530468731 0.35409492864192216 0.66968783014556144 0.18930418019938763 1.1132317965019973 0.64615374504055823 1.0250289280019915 -0.26961752101694075 0.045921995385963137 -0.66161847671505147;-0.90327684422638443 -0.5393394817724394 0.54468101220409659 0.0062848886632319023 0.65241794484365523 -0.52053456813951704 0.080454195385355878 -0.0038223313772167283 -1.4420998011113173 0.45036240018353746 -1.208099565363054 -0.60755768137831911;-0.059099177979491019 -1.3215816733240213 0.22347435403261293 -0.14384979073899876 0.52803130832520817 0.36272435789015955 0.0067226202467330631 0.84528330645358429 0.93166543504060406 0.44972395638609708 -0.31473177320960577 1.1004297220129613;1.1142645654763372 -0.98797696831465132 0.93198825637449723 0.23671938887309354 0.20328254050258576 0.67984452105864701 -0.020264698025405453 -0.4088193219044724 -0.44821614267566573 0.62989821581322647 -0.034150242673651153 -0.12717471894181204;0.45135710604228024 -0.78372349345378833 -0.38943461109658761 0.29058752618300493 -0.32642928649024627 -0.62528547658050382 0.086217273009857459 -0.074578908580790526 -0.64697086445688867 0.96878053288678834 0.70589229115829499 0.16690619900336987;-0.74439343454230023 0.53739500433932885 0.082060683090753733 0.27043000239923171 0.68543291732096778 -0.64768478883388358 0.28450132766505887 -0.58789528873379227 0.072307190554826872 0.58247934945272239 0.93041105788528189 -0.51675581142543447;-0.12707544465614917 0.57172608699432603 -0.83672391694645532 -0.85146327067004091 -0.76870693466609807 -0.97296129955771882 1.0943446040947766 0.48705447068533825 -0.10755433183156955 -0.70566729430856479 0.31159978998755822 -0.72340606911531247;0.69437589138809963 -0.83553022053981485 -0.61634087989032238 -0.72881165039364393 0.074419514660776481 -0.63380018247302861 0.25969287757096476 -0.083302319521202345 0.27035882072079692 0.44586425013036646 0.11708724544709706 -0.57141928667883635;0.32806055549296731 -0.92993970965596939 0.38332272320413552 -0.58446519606704905 0.17802428993312763 -0.77543675959660086 -0.56392085589461183 0.46274024639433442 0.86119826019261625 -0.38826207970601073 -0.38941308986214679 0.58584964163757869;-0.7699509934464579 0.25694608907229277 -0.64703160121176928 -0.67178870328147711 -0.041586040537231486 0.12510971526298031 0.0035899757206525953 0.57438595814883175 -0.06711992748310272 -1.0138366426349226 0.15164303349099642 0.68470382906952898;-0.52123182634834619 -0.59746317328113818 -0.50330994360474279 -0.64959868311114233 -0.40472793184359412 0.92918550538944422 0.19516487213420589 0.46736888220744621 0.43940741012862455 0.19193471677646654 -0.47734759643404945 0.18164247259799932;0.010716172046733585 0.76046933837368136 -0.054142080222534444 0.6106471469860818 -0.30441350067454515 -0.71804688646874892 -0.5936604596260342 -0.16529932776388781 -0.80174170165763148 -0.44598858826022419 0.4574429636379051 -0.21080660641064591;0.2707789040047458 0.38916903883470549 -1.0621400982451665 0.27940423726763725 -0.42859669915782495 -0.26790518610418379 -0.12157938299752563 0.71068060974428771 0.057597746418253631 -0.08048419021675482 0.65301018217727269 0.63846583424582581;-0.96526180761723968 -0.69414549301300787 -0.95879921090977771 -0.45193588245434063 -0.38314715954052353 0.52496017403771533 0.57886896390244658 0.098660153816998705 -0.1260863797603485 0.83427302700785522 0.66208944133945491 -0.28716185145799172;0.49696702190407649 -1.1017296174832218 0.10321903187945265 -0.52182369434335918 -0.4965897223000334 -0.55468733104059476 -0.68042737677722354 0.44616133639129563 0.65544976200136762 0.067226387868261628 0.39294780015305908 0.62493406120476735];

% Layer 2
b2 = [0.29460171029931698;-0.39779983893529958];
LW2_1 = [0.29506720853176899 0.88254438893812093 0.79713179917504218 -0.29374133382604939 0.10923442902959171 -0.069925332482091401 0.58482572398513344 -0.7184349512107242 -0.87665325431619734 -0.18748329182946444 0.66339633637587958 0.97836628261692893 0.40827476429784315 -0.54642666282743158 0.30377636998947327 0.022018642126703222 0.62824950511443078 -0.44803467752516968 0.79041296476893619 0.54066669913044874;-0.50890624965069242 -0.36788874815090883 -1.3261737196254852 0.014236675131984174 -0.15298616258664574 0.58167665600836127 -1.3256086238732321 0.4723569254184915 -0.20040139241801302 0.23625280430663237 -0.3024287971406398 -0.31602041144895215 0.1028385556900443 -0.27791157242242043 -0.13256962972376007 0.0085092569734453588 -0.15364221225864289 0.5168729330769759 -0.59444782821375053 -0.66247427752988841];

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX, X = {X}; end;

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
    Q = size(X{1},2); % samples/series
else
    Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS
    
    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1_gain,x1_step1_xoffset,x1_step1_ymin);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = softmax_apply(repmat(b2,1,Q) + LW2_1*a1);
    
    % Output 1
    Y{1,ts} = a2;
end

% Final Delay States
Xf = cell(1,0);
Af = cell(2,0);

% Format Output Arguments
if ~isCellX, Y = cell2mat(Y); end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings_gain,settings_xoffset,settings_ymin)
y = bsxfun(@minus,x,settings_xoffset);
y = bsxfun(@times,y,settings_gain);
y = bsxfun(@plus,y,settings_ymin);
end

% Competitive Soft Transfer Function
function a = softmax_apply(n)
nmax = max(n,[],1);
n = bsxfun(@minus,n,nmax);
numer = exp(n);
denom = sum(numer,1);
denom(denom == 0) = 1;
a = bsxfun(@rdivide,numer,denom);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n)
a = 2 ./ (1 + exp(-2*n)) - 1;
end
